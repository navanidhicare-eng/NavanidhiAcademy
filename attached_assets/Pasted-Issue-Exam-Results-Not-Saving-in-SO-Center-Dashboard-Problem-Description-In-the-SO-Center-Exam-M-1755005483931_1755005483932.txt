Issue: Exam Results Not Saving in SO Center Dashboard
Problem Description:
In the SO Center Exam Management page, when trying to post marks by clicking "Update" button and then "Enter Marks", the process works until the "Save Result" step. However, when selecting questions and clicking "Save Result", the data is not being saved to the database and the system keeps asking to "Enter Marks" again.

Root Cause Identified:
The database error shows: PostgresError: column "percentage" of relation "exam_results" does not exist. The backend code is trying to insert a percentage column that doesn't exist in the database schema.

Files Involved:

server/routes.ts - Contains the exam results saving endpoint
client/src/pages/so-center/PostExamResult.tsx - Frontend component for entering results
Database schema in shared/schema.ts - exam_results table definition
Required Fix:

Backend Fix (server/routes.ts):

Remove the percentage column from the insert/update operations in exam results endpoints
Calculate percentage dynamically when retrieving results instead of storing it
Ensure the API response format remains consistent for frontend compatibility
Frontend Fix (PostExamResult.tsx):

Ensure proper error handling for failed save operations
Display appropriate feedback to users when saves fail
Maintain the existing UI flow but handle backend errors gracefully
Expected Behavior:

SO Center users should be able to enter marks for exam questions
Clicking "Save Result" should successfully save the data to the database
The system should show "Completed" status instead of "Pending" after successful save
Results should persist and be retrievable on subsequent visits
Current Error Log:

‚ùå Database error for student: b37ce5d6-dc32-41f7-9f26-9e4908a9f936 
PostgresError: column "percentage" of relation "exam_results" does not exist
Priority: High - This is blocking SO Center managers from posting exam results, which is a core functionality.

Instructions for Agent:
Please fix the exam results saving functionality by:

Removing the non-existent percentage column from database operations
Implementing dynamic percentage calculation on data retrieval
Ensuring backward compatibility with existing frontend code
Testing the complete flow from mark entry to successful save